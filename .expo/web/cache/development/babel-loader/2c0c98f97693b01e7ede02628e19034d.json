{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useState, useEffect } from \"react\";\nimport { getSinglePlant } from \"./utils/Api\";\nimport { Image } from 'react-native-elements';\nimport { Button } from 'react-native-elements';\n\nvar SingleLookedUpPlantScreen = function SingleLookedUpPlantScreen(props) {\n  var route = props.route;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      singlePlant = _useState2[0],\n      setSinglePlant = _useState2[1];\n\n  var commonName = props.route.params.commonName;\n  var imageSource = singlePlant.image_url;\n  useEffect(function () {\n    getSinglePlant(commonName).then(function (response) {\n      setSinglePlant(response);\n    }).catch(function (err) {\n      console.log(err, \"<-----err\");\n    });\n  }, []);\n  return React.createElement(ScrollView, null, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Image, {\n    source: {\n      uri: imageSource\n    },\n    style: {\n      width: 250,\n      height: 250,\n      borderRadius: 100\n    },\n    PlaceholderContent: React.createElement(ActivityIndicator, null)\n  }), React.createElement(Text, {\n    style: styles.title\n  }, \" \", singlePlant.commonName, \" \"), React.createElement(Text, {\n    style: styles.subtitle\n  }, \" \", singlePlant.botanicalName, \" \"), React.createElement(Text, {\n    style: styles.description\n  }, \" \", singlePlant.description, \" \"), React.createElement(Button, {\n    icon: {\n      name: \"arrow-right\",\n      size: 15,\n      color: \"white\"\n    },\n    title: \"Add To Inventory\"\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  header: {\n    flex: 1\n  },\n  section: {\n    flex: 3\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: '700'\n  },\n  subtitle: {\n    fontSize: 20,\n    fontWeight: '500',\n    fontStyle: 'italic'\n  },\n  description: {\n    fontSize: 15,\n    fontWeight: '300',\n    marginHorizontal: 20,\n    lineHeight: 20\n  }\n});\nexport default SingleLookedUpPlantScreen;","map":{"version":3,"sources":["/Users/philbulleyment/Documents/northcoders/projects/final-project/components/SingleLookedUpPlantScreen.tsx"],"names":["React","useState","useEffect","getSinglePlant","Image","Button","SingleLookedUpPlantScreen","props","route","singlePlant","setSinglePlant","commonName","params","imageSource","image_url","then","response","catch","err","console","log","styles","container","uri","width","height","borderRadius","title","subtitle","botanicalName","description","name","size","color","StyleSheet","create","flex","alignItems","header","section","fontSize","fontWeight","fontStyle","marginHorizontal","lineHeight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, ActivityIndicator, ScrollView } from \"react-native\";\nimport { useState, useEffect } from \"react\"\nimport { getSinglePlant } from './utils/Api';\nimport { Image } from 'react-native-elements';\nimport { Button } from 'react-native-elements';\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\n\nconst SingleLookedUpPlantScreen = (props:any) => {\n  const {route} = props\n  const [singlePlant, setSinglePlant] = useState({});\n  const {commonName} = props.route.params\n  \n  const imageSource = singlePlant.image_url\n  \n\n  useEffect(() => {\n    getSinglePlant(commonName)\n      .then((response) => {\n       setSinglePlant(response);\n        \n      })\n      .catch((err) => {\n        console.log(err, \"<-----err\");\n      });\n  },[]);\n\n    return (\n      <ScrollView>\n        <View style={ styles.container}>\n        <Image  source={ {uri:imageSource} }  style={{ width: 250, height: 250, borderRadius:100 }}  PlaceholderContent={<ActivityIndicator />}/>\n        <Text style={styles.title}> {singlePlant.commonName} </Text>\n        <Text style={styles.subtitle}> {singlePlant.botanicalName} </Text>\n        <Text style={styles.description}> {singlePlant.description} </Text>\n        <Button icon={{ name: \"arrow-right\", size: 15, color: \"white\" }}  title=\"Add To Inventory\"/>\n      </View>\n      </ScrollView>\n    );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex:1,\n    alignItems: 'center',\n    \n  },\n  header: {\n    flex: 1,\n    \n  },\n  section: {\n    flex: 3,\n    \n  },\n  title: {\n    fontSize: 30,\n    fontWeight: '700',\n  },\n  subtitle: {\n    fontSize: 20,\n    fontWeight: '500',\n    fontStyle:'italic'\n  },\n  description: {\n    fontSize: 15,\n    fontWeight: '300',\n    marginHorizontal:20,\n    lineHeight: 20,\n    \n  }\n})\n\nexport default SingleLookedUpPlantScreen"]},"metadata":{},"sourceType":"module"}