{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { createContext, useState } from \"react\";\nexport var UserContext = createContext({});\nexport var UserProvider = function UserProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var getUserName = function getUserName() {\n    var user;\n    return _regeneratorRuntime.async(function getUserName$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser());\n\n          case 2:\n            user = _context.sent;\n            setUserName(user.username);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  getUserName();\n  return React.createElement(UserContext.Provider, {\n    value: {\n      userName: userName,\n      setUserName: setUserName\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/philbulleyment/Documents/northcoders/projects/final-project/components/utils/User.tsx"],"names":["createContext","useState","UserContext","UserProvider","children","userName","setUserName","getUserName","Auth","currentAuthenticatedUser","user","username"],"mappings":";;AAAA,SAASA,aAAT,EAAoCC,QAApC,QAAoD,OAApD;AAEA,OAAO,IAAMC,WAAW,GAAGF,aAAa,CAAS,EAAT,CAAjC;AAEP,OAAO,IAAMG,YAAY,GAAG,SAAfA,YAAe,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAC5C,kBAAgCH,QAAQ,CAAiB,IAAjB,CAAxC;AAAA;AAAA,MAAOI,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,WAAW,GAAI,SAAfA,WAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACAC,IAAI,CAACC,wBAAL,EADA;;AAAA;AACbC,YAAAA,IADa;AAEnBJ,YAAAA,WAAW,CAAEI,IAAI,CAACC,QAAP,CAAX;;AAFmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAIAJ,EAAAA,WAAW;AAWX,SACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEF,MAAAA,QAAQ,EAARA,QAAF;AAAYC,MAAAA,WAAW,EAAXA;AAAZ;AAA7B,KACGF,QADH,CADF;AAKD,CAvBM","sourcesContent":["import { createContext, useContext, useState } from \"react\";\n\nexport const UserContext = createContext<object>({});\n\nexport const UserProvider = ({ children }) => {\n  const [userName, setUserName] = useState<string | null >(null);\n\n  const getUserName =  async () => {\n    const user = await Auth.currentAuthenticatedUser();  \n    setUserName (user.username)\n  }\n  getUserName()\n\n  //const isLoggedIn = !!user;\n\n  //   useEffect(() => {\n  //     const prevLoggedInUser = localStorage.getItem(\"loggedInUser\");\n  //     if (prevLoggedInUser) {\n  //       setUser(prevLoggedInUser);\n  //     }\n  //   }, []);\n\n  return (\n    <UserContext.Provider value={{ userName, setUserName }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}