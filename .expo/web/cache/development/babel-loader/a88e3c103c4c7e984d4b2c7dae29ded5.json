{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useState, useEffect } from \"react\";\nimport { getSinglePlant } from \"./utils/Api\";\n\nvar SingleLookedUpPlantScreen = function SingleLookedUpPlantScreen(props) {\n  var route = props.route;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      singlePlant = _useState2[0],\n      setSinglePlant = _useState2[1];\n\n  var commonName = props.route.params.commonName;\n  useEffect(function () {\n    getSinglePlant(commonName).then(function (response) {\n      console.log(response, '<---response');\n      setSinglePlant(response);\n    }).catch(function (err) {\n      console.log(err, \"<-----err\");\n    });\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Text, null, \"Search for user plant\"), React.createElement(Text, null, \"Search for plant from user collection\"), React.createElement(Image, {\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    resizeMode: \"contain\",\n    uri: singlePlant.image_url\n  }), React.createElement(Text, null, \" \", singlePlant.commonName, \" \"), React.createElement(Text, null, \" \", singlePlant.botanicalName, \" \"), React.createElement(Text, null, \" \", singlePlant.description, \" \"));\n};\n\nexport default SingleLookedUpPlantScreen;","map":{"version":3,"sources":["/Users/philbulleyment/Documents/northcoders/projects/final-project/components/SingleLookedUpPlantScreen.tsx"],"names":["React","useState","useEffect","getSinglePlant","SingleLookedUpPlantScreen","props","route","singlePlant","setSinglePlant","commonName","params","then","response","console","log","catch","err","flex","justifyContent","alignItems","width","height","image_url","botanicalName","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,cAAT;;AAGA,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,KAAD,EAAe;AAC/C,MAAOC,KAAP,GAAgBD,KAAhB,CAAOC,KAAP;;AACA,kBAAsCL,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOM,WAAP;AAAA,MAAoBC,cAApB;;AACA,MAAOC,UAAP,GAAqBJ,KAAK,CAACC,KAAN,CAAYI,MAAjC,CAAOD,UAAP;AAGAP,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,cAAc,CAACM,UAAD,CAAd,CACGE,IADH,CACQ,UAACC,QAAD,EAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAAsB,cAAtB;AACAJ,MAAAA,cAAc,CAACI,QAAD,CAAd;AAED,KALH,EAMGG,KANH,CAMS,UAACC,GAAD,EAAS;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ,EAAiB,WAAjB;AACD,KARH;AASD,GAVQ,EAUP,EAVO,CAAT;AAYE,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE,QAA3B;AAAqCC,MAAAA,UAAU,EAAE;AAAjD;AAAb,KACA,oBAAC,IAAD,gCADA,EAEA,oBAAC,IAAD,gDAFA,EAGA,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAAd;AAAkD,IAAA,UAAU,EAAC,SAA7D;AAAsE,IAAA,GAAG,EAAEd,WAAW,CAACe;AAAvF,IAHA,EAKA,oBAAC,IAAD,aAAQf,WAAW,CAACE,UAApB,MALA,EAMA,oBAAC,IAAD,aAAQF,WAAW,CAACgB,aAApB,MANA,EAOA,oBAAC,IAAD,aAAQhB,WAAW,CAACiB,WAApB,MAPA,CADJ;AAWH,CA7BD;;AA+BA,eAAepB,yBAAf","sourcesContent":["import React from 'react';\nimport { View, Text, Image } from \"react-native\";\nimport { useState, useEffect } from \"react\"\nimport { getSinglePlant } from './utils/Api';\n\n\nconst SingleLookedUpPlantScreen = (props:any) => {\n  const {route} = props\n  const [singlePlant, setSinglePlant] = useState({});\n  const {commonName} = props.route.params\n  \n\n  useEffect(() => {\n    getSinglePlant(commonName)\n      .then((response) => {\n        console.log(response, '<---response')\n        setSinglePlant(response);\n        \n      })\n      .catch((err) => {\n        console.log(err, \"<-----err\");\n      });\n  },[]);\n\n    return (\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n        <Text>Search for user plant</Text>\n        <Text>Search for plant from user collection</Text>\n        <Image style={{ width: \"100%\", height: \"100%\" }}  resizeMode=\"contain\"uri={singlePlant.image_url}\n                />\n        <Text> {singlePlant.commonName} </Text>\n        <Text> {singlePlant.botanicalName} </Text>\n        <Text> {singlePlant.description} </Text>\n      </View>\n    );\n}\n\nexport default SingleLookedUpPlantScreen"]},"metadata":{},"sourceType":"module"}