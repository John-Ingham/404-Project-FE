{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Searchbar } from \"react-native-paper\";\nimport Carousel, { Pagination } from \"react-native-snap-carousel\";\n\nvar SearchScreen = function SearchScreen(props) {\n  var navigation = props.navigation;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      searchQuery = _React$useState2[0],\n      setSearchQuery = _React$useState2[1];\n\n  var onChangeSearch = function onChangeSearch(query) {\n    return setSearchQuery(query);\n  };\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      indexSelected = _useState2[0],\n      setIndexSelected = _useState2[1];\n\n  var onSelect = function onSelect(indexSelected) {\n    setIndexSelected(indexSelected);\n  };\n\n  var _Dimensions$get = Dimensions.get(\"window\"),\n      width = _Dimensions$get.width;\n\n  var SPACING = 10;\n  var THUMB_SIZE = 80;\n  var IMAGES = {\n    image1: require(\"../assets/flowering-house-plants-1.jpg\"),\n    image2: require(\"../assets/foliage-house-plants-1.jpg\"),\n    image3: require(\"../assets/cacti-1.jpg\")\n  };\n\n  var _useState3 = useState([{\n    id: \"Flowering House Plants\",\n    image: IMAGES.image1\n  }, {\n    id: \"Foliage House Plants\",\n    image: IMAGES.image2\n  }, {\n    id: \"Cacti and Other Succulents\",\n    image: IMAGES.image3\n  }]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      images = _useState4[0],\n      setImages = _useState4[1];\n\n  var handleOnPress = function handleOnPress(plantCategoryId) {\n    navigation.navigate(\"Single Plant Category\", {\n      plantCategoryId: plantCategoryId\n    });\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"flex-start\",\n      alignItems: \"center\"\n    }\n  }, React.createElement(Searchbar, {\n    style: styles.searchbar,\n    placeholder: \"Search\",\n    onChangeText: onChangeSearch,\n    value: searchQuery\n  }), React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\"\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      marginTop: 20\n    }\n  }, React.createElement(Carousel, {\n    layout: \"default\",\n    data: images,\n    sliderWidth: width,\n    itemWidth: width,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return handleOnPress(item.id);\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 30\n        }\n      }, item.id), React.createElement(Image, {\n        key: index,\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        resizeMode: \"contain\",\n        source: item.image\n      }));\n    },\n    onSnapToItem: function onSnapToItem(index) {\n      return onSelect(index);\n    }\n  }), React.createElement(View, {\n    style: {\n      marginTop: 20,\n      paddingHorizontal: 32,\n      alignSelf: \"flex-end\"\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"black\",\n      fontSize: 22\n    }\n  })), React.createElement(Pagination, {\n    inactiveDotColor: \"gray\",\n    dotColor: \"orange\",\n    activeDotIndex: indexSelected,\n    dotsLength: images.length,\n    animatedDuration: 150,\n    inactiveDotScale: 1\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"flex-start\",\n    backgroundColor: \"#ebebeb\"\n  },\n  text: {\n    color: \"#101010\",\n    fontSize: 24,\n    fontWeight: \"bold\"\n  },\n  buttonContainer: {\n    backgroundColor: \"#222\",\n    borderRadius: 5,\n    padding: 10,\n    margin: 20\n  },\n  buttonText: {\n    fontSize: 20,\n    color: \"#fff\"\n  },\n  searchbar: {\n    width: 300,\n    marginTop: 10\n  },\n  categoryImage: {\n    width: 100,\n    height: 100\n  },\n  categoryPictureContainer: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\"\n  }\n});\nexport default SearchScreen;","map":{"version":3,"sources":["/home/john/northcoders/projects/404-Project-FE/components/SearchScreen.tsx"],"names":["React","useState","Searchbar","Carousel","Pagination","SearchScreen","props","navigation","searchQuery","setSearchQuery","onChangeSearch","query","indexSelected","setIndexSelected","onSelect","Dimensions","get","width","SPACING","THUMB_SIZE","IMAGES","image1","require","image2","image3","id","image","images","setImages","handleOnPress","plantCategoryId","navigate","flex","justifyContent","alignItems","styles","searchbar","marginTop","item","index","fontSize","height","paddingHorizontal","alignSelf","color","length","StyleSheet","create","container","backgroundColor","text","fontWeight","buttonContainer","borderRadius","padding","margin","buttonText","categoryImage","categoryPictureContainer","flexDirection","flexWrap"],"mappings":";AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAASC,QAAT,QAA6C,OAA7C;;;;;;;AAWA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,QAAP,IAAmBC,UAAnB,QAAqC,4BAArC;;AAIA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAgB;AACnC,MAAQC,UAAR,GAAuBD,KAAvB,CAAQC,UAAR;;AACA,wBAAsCP,KAAK,CAACC,QAAN,CAAe,EAAf,CAAtC;AAAA;AAAA,MAAOO,WAAP;AAAA,MAAoBC,cAApB;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD;AAAA,WAAmBF,cAAc,CAACE,KAAD,CAAjC;AAAA,GAAvB;;AACA,kBAA0CV,QAAQ,CAAC,CAAD,CAAlD;AAAA;AAAA,MAAOW,aAAP;AAAA,MAAsBC,gBAAtB;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACF,aAAD,EAA2B;AAC1CC,IAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACD,GAFD;;AAGA,wBAAkBG,UAAU,CAACC,GAAX,CAAe,QAAf,CAAlB;AAAA,MAAQC,KAAR,mBAAQA,KAAR;;AACA,MAAMC,OAAO,GAAG,EAAhB;AACA,MAAMC,UAAU,GAAG,EAAnB;AAEA,MAAMC,MAAM,GAAG;AACbC,IAAAA,MAAM,EAAEC,OAAO,0CADF;AAEbC,IAAAA,MAAM,EAAED,OAAO,wCAFF;AAGbE,IAAAA,MAAM,EAAEF,OAAO;AAHF,GAAf;;AAMA,mBAA4BrB,QAAQ,CAAC,CACnC;AAAEwB,IAAAA,EAAE,EAAE,wBAAN;AAAgCC,IAAAA,KAAK,EAAEN,MAAM,CAACC;AAA9C,GADmC,EAEnC;AAAEI,IAAAA,EAAE,EAAE,sBAAN;AAA8BC,IAAAA,KAAK,EAAEN,MAAM,CAACG;AAA5C,GAFmC,EAGnC;AAAEE,IAAAA,EAAE,EAAE,4BAAN;AAAoCC,IAAAA,KAAK,EAAEN,MAAM,CAACI;AAAlD,GAHmC,CAAD,CAApC;AAAA;AAAA,MAAOG,MAAP;AAAA,MAAeC,SAAf;;AAMA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,eAAD,EAA6B;AAC7CvB,IAAAA,UAAU,CAACwB,QAAX,CAAoB,uBAApB,EAA6C;AAAED,MAAAA,eAAe,EAAfA;AAAF,KAA7C;AACL,GAFD;;AAIA,SACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AAAEE,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE,YAA3B;AAAyCC,MAAAA,UAAU,EAAE;AAArD;AADT,KAGE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEC,MAAM,CAACC,SADhB;AAEE,IAAA,WAAW,EAAC,QAFd;AAGE,IAAA,YAAY,EAAE1B,cAHhB;AAIE,IAAA,KAAK,EAAEF;AAJT,IAHF,EAUE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEwB,MAAAA,IAAI,EAAE,CAAR;AAAWE,MAAAA,UAAU,EAAE;AAAvB;AAAb,KAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEF,MAAAA,IAAI,EAAE,CAAR;AAAWK,MAAAA,SAAS,EAAE;AAAtB;AAAb,KACE,oBAAC,QAAD;AACE,IAAA,MAAM,EAAC,SADT;AAEE,IAAA,IAAI,EAAEV,MAFR;AAGE,IAAA,WAAW,EAAEV,KAHf;AAIE,IAAA,SAAS,EAAEA,KAJb;AAKE,IAAA,UAAU,EAAE;AAAA,UAAGqB,IAAH,QAAGA,IAAH;AAAA,UAASC,KAAT,QAASA,KAAT;AAAA,aACV,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE;AAAA,iBAAMV,aAAa,CAACS,IAAI,CAACb,EAAN,CAAnB;AAAA;AAA3B,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEe,UAAAA,QAAQ,EAAE;AAAZ;AAAb,SAAgCF,IAAI,CAACb,EAArC,CADF,EAEE,oBAAC,KAAD;AACE,QAAA,GAAG,EAAEc,KADP;AAEE,QAAA,KAAK,EAAE;AAAEtB,UAAAA,KAAK,EAAE,MAAT;AAAiBwB,UAAAA,MAAM,EAAE;AAAzB,SAFT;AAGE,QAAA,UAAU,EAAC,SAHb;AAIE,QAAA,MAAM,EAAEH,IAAI,CAACZ;AAJf,QAFF,CADU;AAAA,KALd;AAgBE,IAAA,YAAY,EAAE,sBAACa,KAAD;AAAA,aAAWzB,QAAQ,CAACyB,KAAD,CAAnB;AAAA;AAhBhB,IADF,EAmBE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLF,MAAAA,SAAS,EAAE,EADN;AAELK,MAAAA,iBAAiB,EAAE,EAFd;AAGLC,MAAAA,SAAS,EAAE;AAHN;AADT,KAOE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,OADF;AAELJ,MAAAA,QAAQ,EAAE;AAFL;AADT,IAPF,CAnBF,EAmCE,oBAAC,UAAD;AACE,IAAA,gBAAgB,EAAC,MADnB;AAEE,IAAA,QAAQ,EAAE,QAFZ;AAGE,IAAA,cAAc,EAAE5B,aAHlB;AAIE,IAAA,UAAU,EAAEe,MAAM,CAACkB,MAJrB;AAKE,IAAA,gBAAgB,EAAE,GALpB;AAME,IAAA,gBAAgB,EAAE;AANpB,IAnCF,CAHF,CAVF,CADF;AAqGD,CAnID;;AAqIA,IAAMV,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACThB,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE,YAHH;AAITe,IAAAA,eAAe,EAAE;AAJR,GADoB;AAO/BC,EAAAA,IAAI,EAAE;AACJN,IAAAA,KAAK,EAAE,SADH;AAEJJ,IAAAA,QAAQ,EAAE,EAFN;AAGJW,IAAAA,UAAU,EAAE;AAHR,GAPyB;AAY/BC,EAAAA,eAAe,EAAE;AACfH,IAAAA,eAAe,EAAE,MADF;AAEfI,IAAAA,YAAY,EAAE,CAFC;AAGfC,IAAAA,OAAO,EAAE,EAHM;AAIfC,IAAAA,MAAM,EAAE;AAJO,GAZc;AAkB/BC,EAAAA,UAAU,EAAE;AACVhB,IAAAA,QAAQ,EAAE,EADA;AAEVI,IAAAA,KAAK,EAAE;AAFG,GAlBmB;AAsB/BR,EAAAA,SAAS,EAAE;AACTnB,IAAAA,KAAK,EAAE,GADE;AAEToB,IAAAA,SAAS,EAAE;AAFF,GAtBoB;AA0B/BoB,EAAAA,aAAa,EAAE;AACbxC,IAAAA,KAAK,EAAE,GADM;AAEbwB,IAAAA,MAAM,EAAE;AAFK,GA1BgB;AA8B/BiB,EAAAA,wBAAwB,EAAE;AACxBC,IAAAA,aAAa,EAAE,KADS;AAExBC,IAAAA,QAAQ,EAAE,MAFc;AAGxB3B,IAAAA,cAAc,EAAE;AAHQ;AA9BK,CAAlB,CAAf;AAqCA,eAAe5B,YAAf","sourcesContent":["import React, { FC } from \"react\";\nimport { useState, useRef, useContext } from \"react\";\nimport { getPlants } from \"./utils/Api\";\nimport {\nTouchableOpacity,\n  View,\n  Text,\n  Image,\n  FlatList,\n  Dimensions,\n  StyleSheet,\n} from \"react-native\";\nimport { Searchbar } from \"react-native-paper\";\nimport Carousel, { Pagination } from \"react-native-snap-carousel\";\n\n\n\nconst SearchScreen = (props: any) => {\n  const { navigation } = props;\n  const [searchQuery, setSearchQuery] = React.useState(\"\");\n  \n  const onChangeSearch = (query: string) => setSearchQuery(query);\n  const [indexSelected, setIndexSelected] = useState(0);\n\n  const onSelect = (indexSelected: number) => {\n    setIndexSelected(indexSelected);\n  };\n  const { width } = Dimensions.get(\"window\");\n  const SPACING = 10;\n  const THUMB_SIZE = 80;\n\n  const IMAGES = {\n    image1: require(\"../assets/flowering-house-plants-1.jpg\"),\n    image2: require(\"../assets/foliage-house-plants-1.jpg\"),\n    image3: require(\"../assets/cacti-1.jpg\"),\n  };\n\n  const [images, setImages] = useState([\n    { id: \"Flowering House Plants\", image: IMAGES.image1 },\n    { id: \"Foliage House Plants\", image: IMAGES.image2 },\n    { id: \"Cacti and Other Succulents\", image: IMAGES.image3 },\n  ]);\n\n  const handleOnPress = (plantCategoryId: string) => {\n        navigation.navigate(\"Single Plant Category\", { plantCategoryId });\n  };\n\n  return (\n    <View\n      style={{ flex: 1, justifyContent: \"flex-start\", alignItems: \"center\" }}\n    >\n      <Searchbar\n        style={styles.searchbar}\n        placeholder=\"Search\"\n        onChangeText={onChangeSearch}\n        value={searchQuery}\n      />\n\n      <View style={{ flex: 1, alignItems: \"center\" }}>\n        {/* Title JSX Remains same */}\n        {/* Carousel View */}\n        <View style={{ flex: 1, marginTop: 20 }}>\n          <Carousel\n            layout=\"default\"\n            data={images}\n            sliderWidth={width}\n            itemWidth={width}\n            renderItem={({ item, index }) => (\n              <TouchableOpacity onPress={() => handleOnPress(item.id)}>\n                <Text style={{ fontSize: 30 }}>{item.id}</Text>\n                <Image\n                  key={index}\n                  style={{ width: \"100%\", height: \"100%\" }}\n                  resizeMode=\"contain\"\n                  source={item.image}\n                />\n              </TouchableOpacity>\n            )}\n            onSnapToItem={(index) => onSelect(index)}\n          />\n          <View\n            style={{\n              marginTop: 20,\n              paddingHorizontal: 32,\n              alignSelf: \"flex-end\",\n            }}\n          >\n            <Text\n              style={{\n                color: \"black\",\n                fontSize: 22,\n              }}\n            >\n              {/* {indexSelected + 1}/{images.length} */}\n            </Text>\n          </View>\n          <Pagination\n            inactiveDotColor=\"gray\"\n            dotColor={\"orange\"}\n            activeDotIndex={indexSelected}\n            dotsLength={images.length}\n            animatedDuration={150}\n            inactiveDotScale={1}\n          />\n        </View>\n      </View>\n\n      {/* <View style={styles.categoryPictureContainer}>\n        <TouchableOpacity  style={styles.buttonContainer} onPress={handleOnPress}>  \n        <Image style={styles.categoryImage} name={'cat1'}source={require('../assets/cat1.jpg')}\n           />\n        </TouchableOpacity>\n\n        <TouchableOpacity style={styles.buttonContainer} onPress={() => navigation.navigate('Single Plant Category')} >  \n        <Image style={styles.categoryImage} source={require('../assets/cat1.jpg')} />\n        </TouchableOpacity>\n\n        \n<TouchableOpacity style={styles.buttonContainer} onPress={() => navigation.navigate('Single Plant Category')} >  \n        <Image style={styles.categoryImage} source={require('../assets/cat1.jpg')} />\n        </TouchableOpacity>\n\n        <TouchableOpacity style={styles.buttonContainer} onPress={() => navigation.navigate('Single Plant Category')}>  \n        <Image style={styles.categoryImage} source={require('../assets/cat1.jpg')} />\n        </TouchableOpacity>\n\n\n\n        </View> */}\n\n      {/* <TouchableOpacity style={styles.buttonContainer} onPress={getPlants}>  \n        <Text style={styles.buttonText}>All The Plants</Text>\n        </TouchableOpacity>\n        \n        <TouchableOpacity\n        style={styles.buttonContainer}\n        onPress={() => navigation.navigate('Single Plant Category')}>\n        <Text style={styles.buttonText}>Single Plant Category</Text>\n      </TouchableOpacity>\n\n        \n        <TouchableOpacity\n        style={styles.buttonContainer}\n        onPress={() => navigation.navigate('Single Looked Up Plant')}>\n        <Text style={styles.buttonText}>Single Plant</Text>\n      </TouchableOpacity> */}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"flex-start\",\n    backgroundColor: \"#ebebeb\",\n  },\n  text: {\n    color: \"#101010\",\n    fontSize: 24,\n    fontWeight: \"bold\",\n  },\n  buttonContainer: {\n    backgroundColor: \"#222\",\n    borderRadius: 5,\n    padding: 10,\n    margin: 20,\n  },\n  buttonText: {\n    fontSize: 20,\n    color: \"#fff\",\n  },\n  searchbar: {\n    width: 300,\n    marginTop: 10,\n  },\n  categoryImage: {\n    width: 100,\n    height: 100,\n  },\n  categoryPictureContainer: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n  },\n});\n\nexport default SearchScreen;\n"]},"metadata":{},"sourceType":"module"}