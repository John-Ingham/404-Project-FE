{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { createContext, useState } from \"react\";\nimport { Auth } from \"aws-amplify\";\nexport var UserContext = createContext({\n  userName: \"\",\n  setUserName: function setUserName() {},\n  userPlants: [],\n  setUserPlants: function setUserPlants() {}\n});\nexport function signOut() {\n  return _regeneratorRuntime.async(function signOut$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(Auth.signOut());\n\n        case 3:\n          _context.next = 8;\n          break;\n\n        case 5:\n          _context.prev = 5;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(\"error signing out: \", _context.t0);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n}\nexport var UserProvider = function UserProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var getUserName = function getUserName() {\n    var user;\n    return _regeneratorRuntime.async(function getUserName$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser());\n\n          case 2:\n            user = _context2.sent;\n            setUserName(user.username);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  getUserName();\n  return React.createElement(UserContext.Provider, {\n    value: {\n      userName: userName,\n      setUserName: setUserName\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/philbulleyment/Documents/northcoders/projects/final-project/components/utils/User.tsx"],"names":["React","createContext","useState","Auth","UserContext","userName","setUserName","userPlants","setUserPlants","signOut","console","log","UserProvider","children","getUserName","currentAuthenticatedUser","user","username"],"mappings":";;AAAA,OAAOA,KAAP,IAAoBC,aAApB,EAA+CC,QAA/C,QAA+D,OAA/D;AACA,SAASC,IAAT,QAAqB,aAArB;AAUA,OAAO,IAAMC,WAAW,GAAGH,aAAa,CAAe;AACrDI,EAAAA,QAAQ,EAAE,EAD2C;AAErDC,EAAAA,WAAW,EAAE,uBAAM,CAAE,CAFgC;AAGrDC,EAAAA,UAAU,EAAE,EAHyC;AAIrDC,EAAAA,aAAa,EAAE,yBAAM,CAAE;AAJ8B,CAAf,CAAjC;AAOP,OAAO,SAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEGN,IAAI,CAACM,OAAL,EAFH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIHC,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;;AAJG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYP,OAAO,IAAMC,YAAwB,GAAG,SAA3BA,YAA2B,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACxD,kBAAgCX,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOG,QAAP;AAAA,MAAiBC,WAAjB;;AAIA,MAAMQ,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACCX,IAAI,CAACY,wBAAL,EADD;;AAAA;AACZC,YAAAA,IADY;AAElBV,YAAAA,WAAW,CAACU,IAAI,CAACC,QAAN,CAAX;;AAFkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAIAH,EAAAA,WAAW;AAEX,SACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAET,MAAAA,QAAQ,EAARA,QAAF;AAAYC,MAAAA,WAAW,EAAXA;AAAZ;AAA7B,KACGO,QADH,CADF;AAKD,CAhBM","sourcesContent":["import React, { FC, createContext, useContext, useState } from \"react\";\nimport { Auth } from \"aws-amplify\";\n\ninterface IUserContext {\n  userName: string;\n  setUserName: (newUserName: string) => void;\n  userPlants: object;\n  setUserPlants: (newUserPlant:string) => void\n\n}\n\nexport const UserContext = createContext<IUserContext>({\n  userName: \"\",\n  setUserName: () => {},\n  userPlants: [],\n  setUserPlants: () => {}\n});\n\nexport async function signOut() {\n  try {\n    await Auth.signOut();\n  } catch (error) {\n    console.log(\"error signing out: \", error);\n  }\n}\n\ninterface IProps {\n  children: object | null;\n}\n\nexport const UserProvider: FC<IProps> = ({ children }) => {\n  const [userName, setUserName] = useState(\"\");\n\n\n  //this grabs username from Cognito\n  const getUserName = async () => {\n    const user = await Auth.currentAuthenticatedUser();\n    setUserName(user.username);\n  };\n  getUserName();\n\n  return (\n    <UserContext.Provider value={{ userName, setUserName }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}