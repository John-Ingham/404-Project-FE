{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { Camera } from 'expo-camera';\nimport axios from 'axios';\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: '#354D2A',\n    padding: 20,\n    borderRadius: 5\n  },\n  buttonText: {\n    fontSize: 20,\n    color: '#fff'\n  },\n  thumbnail: {\n    width: 300,\n    height: 300,\n    resizeMode: 'contain'\n  },\n  container: {\n    flex: 2,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  cameraContainer: {\n    flex: 1\n  },\n  camera: {\n    flex: 1\n  },\n  buttonContainer: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    flexDirection: 'row',\n    margin: 20,\n    paddingBottom: 20\n  },\n  cameraButton: {\n    flex: 1,\n    alignSelf: 'flex-end',\n    alignItems: 'center'\n  },\n  text: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'white'\n  }\n});\n\nfunction CameraScreen() {\n  var _useState = useState({\n    localUri: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      cameraRollImage = _useState2[0],\n      setCameraRollImage = _useState2[1];\n\n  var _useState3 = useState({\n    height: \"\",\n    uri: \"\",\n    width: \"\",\n    base64: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cameraPhoto = _useState4[0],\n      setCameraPhoto = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      haveCameraPermission = _useState6[0],\n      setHaveCameraPermission = _useState6[1];\n\n  var _useState7 = useState(Camera.Constants.Type.back),\n      _useState8 = _slicedToArray(_useState7, 2),\n      type = _useState8[0],\n      setType = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showCamera = _useState10[0],\n      setShowCamera = _useState10[1];\n\n  var cameraRef = useRef(null);\n\n  var openCameraAsync = function openCameraAsync() {\n    var cameraPermissionResult;\n    return _regeneratorRuntime.async(function openCameraAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Camera.requestCameraPermissionsAsync());\n\n          case 2:\n            cameraPermissionResult = _context.sent;\n\n            if (!(cameraPermissionResult.granted === false)) {\n              _context.next = 6;\n              break;\n            }\n\n            alert('Permission to use camera is required!');\n            return _context.abrupt(\"return\");\n\n          case 6:\n            setHaveCameraPermission(\"Yes\");\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var openImagePickerAsync = function openImagePickerAsync() {\n    var permissionResult, pickerResult;\n    return _regeneratorRuntime.async(function openImagePickerAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n          case 2:\n            permissionResult = _context2.sent;\n\n            if (!(permissionResult.granted === false)) {\n              _context2.next = 6;\n              break;\n            }\n\n            alert('Permission to access camera roll is required!');\n            return _context2.abrupt(\"return\");\n\n          case 6:\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync());\n\n          case 8:\n            pickerResult = _context2.sent;\n\n            if (!(pickerResult.cancelled === true)) {\n              _context2.next = 11;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 11:\n            setCameraRollImage({\n              localUri: pickerResult.uri\n            });\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (cameraRollImage.localUri !== \"\") {\n    return React.createElement(View, {\n      style: styles.container\n    }, React.createElement(Image, {\n      source: {\n        uri: cameraRollImage.localUri\n      },\n      style: styles.thumbnail\n    }), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return alert('Saved!');\n      },\n      style: styles.button\n    }, React.createElement(Text, {\n      style: styles.buttonText\n    }, \"Save chosen image\")));\n  }\n\n  function makeApiCall() {\n    var plant, response, suggestedPlants;\n    return _regeneratorRuntime.async(function makeApiCall$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(axios.post(\"https://api.plant.id/v2/identify\", {\n              api_key: \"iV7mwOKohIvJItMVxVm9EaZOuivehgHxZPYoEbYUEyWkKYtOAF\",\n              images: [cameraPhoto.base64],\n              plant_language: \"en\",\n              plant_details: [\"common_names\"]\n            }, {\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            }));\n\n          case 3:\n            response = _context3.sent;\n            suggestedPlants = response.data.suggestions.map(function (plant) {\n              return {\n                botanicalName: plant.plant_name,\n                commonName: plant.plant_details.common_names,\n                probability: plant.probability\n              };\n            });\n            console.log(suggestedPlants);\n            _context3.next = 11;\n            break;\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  }\n\n  if (cameraPhoto.height !== \"\") {\n    return React.createElement(View, {\n      style: styles.container\n    }, React.createElement(Image, {\n      source: {\n        uri: cameraPhoto.uri\n      },\n      style: styles.thumbnail\n    }), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return alert('Saved!');\n      },\n      style: styles.button\n    }, React.createElement(Text, {\n      style: styles.buttonText\n    }, \"Save chosen image\")), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        makeApiCall();\n      },\n      style: styles.button\n    }, React.createElement(Text, {\n      style: styles.buttonText\n    }, \"Identify this plant\")));\n  }\n\n  var takePhoto = function takePhoto() {\n    var photo;\n    return _regeneratorRuntime.async(function takePhoto$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (!cameraRef) {\n              _context4.next = 13;\n              break;\n            }\n\n            console.log(\"In take photo\");\n            _context4.prev = 2;\n            _context4.next = 5;\n            return _regeneratorRuntime.awrap(cameraRef.current.takePictureAsync({\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1,\n              base64: true\n            }));\n\n          case 5:\n            photo = _context4.sent;\n            setCameraPhoto(photo);\n            return _context4.abrupt(\"return\", photo);\n\n          case 10:\n            _context4.prev = 10;\n            _context4.t0 = _context4[\"catch\"](2);\n            console.log(_context4.t0);\n\n          case 13:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[2, 10]], Promise);\n  };\n\n  if (haveCameraPermission === \"Yes\") {\n    return React.createElement(View, {\n      style: styles.cameraContainer\n    }, React.createElement(Camera, {\n      style: styles.camera,\n      type: type,\n      ref: cameraRef\n    }, React.createElement(View, {\n      style: styles.buttonContainer\n    }, React.createElement(TouchableOpacity, {\n      style: styles.cameraButton,\n      onPress: function onPress() {\n        setType(type === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back);\n      }\n    }, React.createElement(Text, {\n      style: styles.text\n    }, \" Flip \")), React.createElement(TouchableOpacity, {\n      style: styles.cameraButton,\n      onPress: function _callee() {\n        var r;\n        return _regeneratorRuntime.async(function _callee$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return _regeneratorRuntime.awrap(takePhoto());\n\n              case 2:\n                r = _context5.sent;\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n    }, React.createElement(Text, {\n      style: styles.text\n    }, \" Photo \")), React.createElement(TouchableOpacity, {\n      style: styles.cameraButton\n    }, React.createElement(Text, {\n      style: styles.text\n    }, \" Cancel \")))));\n  }\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, null, \"Add a plant to your collection!\"), React.createElement(Text, null, \"Push button to select from camera roll \"), React.createElement(TouchableOpacity, {\n    onPress: openImagePickerAsync,\n    style: styles.button\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, \"Pick a photo\")), React.createElement(Text, null, \" Push button to open camera\"), React.createElement(TouchableOpacity, {\n    onPress: openCameraAsync,\n    style: styles.button\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, \"Take a photo\")));\n}\n\nexport default CameraScreen;","map":{"version":3,"sources":["/home/john/northcoders/projects/404-Project-FE/components/CameraScreen.tsx"],"names":["React","useState","useRef","ImagePicker","Camera","axios","styles","StyleSheet","create","button","backgroundColor","padding","borderRadius","buttonText","fontSize","color","thumbnail","width","height","resizeMode","container","flex","alignItems","justifyContent","cameraContainer","camera","buttonContainer","flexDirection","margin","paddingBottom","cameraButton","alignSelf","text","fontWeight","CameraScreen","localUri","cameraRollImage","setCameraRollImage","uri","base64","cameraPhoto","setCameraPhoto","haveCameraPermission","setHaveCameraPermission","Constants","Type","back","type","setType","showCamera","setShowCamera","cameraRef","openCameraAsync","requestCameraPermissionsAsync","cameraPermissionResult","granted","alert","openImagePickerAsync","requestMediaLibraryPermissionsAsync","permissionResult","launchImageLibraryAsync","pickerResult","cancelled","makeApiCall","post","api_key","images","plant_language","plant_details","headers","response","suggestedPlants","data","suggestions","map","plant","botanicalName","plant_name","commonName","common_names","probability","console","log","takePhoto","current","takePictureAsync","allowsEditing","aspect","quality","photo","front","r"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport * as Permissions from \"expo-permissions\"\nimport { View, Text, Image, TouchableOpacity, StyleSheet, Alert } from \"react-native\";\nimport * as ImagePicker from 'expo-image-picker'\nimport {Camera} from 'expo-camera'\nimport axios, { Axios } from 'axios';\nimport ImgToBase64 from 'react-native-image-base64'; // this should work\nimport makeApiCall from './utils/makeApiCallToPlantID'\n// import imageToBase64 from 'image-to-base64/browser'\n// const imageToBase64 = require('image-tobase64') - cannot require\n\n\n\nconst styles = StyleSheet.create({\n  button: {\n    backgroundColor: '#354D2A',\n    padding: 20,\n    borderRadius: 5,\n    \n  },\n  buttonText: {\n    fontSize: 20,\n    color: '#fff',\n  },\n  thumbnail: {\n    width: 300,\n    height: 300,\n    resizeMode: 'contain', //useful line, makes the image not square if the selected image is not\n  },\n  container: {\n    flex: 2,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  // camera\n  cameraContainer: {\n    flex: 1,\n  },\n  camera: {\n    flex: 1,\n  },\n  buttonContainer: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    flexDirection: 'row',\n    margin: 20,\n    paddingBottom: 20\n  },\n  cameraButton: {\n    flex: 1,\n    alignSelf: 'flex-end',\n    alignItems: 'center',\n  },\n  text: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  \n})\n\nfunction CameraScreen() {\n  \n    const [cameraRollImage, setCameraRollImage] = useState({localUri:\"\"})\n    const [cameraPhoto, setCameraPhoto] = useState({height:\"\", uri:\"\", width:\"\", base64:\"\"}) \n    const [haveCameraPermission, setHaveCameraPermission] = useState(\"\")\n    const [type, setType] = useState(Camera.Constants.Type.back);\n    const [showCamera, setShowCamera] = useState(false) // not using\n\n    const cameraRef = useRef(null)   \n  \n    \n\n\n  let openCameraAsync = async () => {\n    //  let cameraPermissionResult = await Permissions.askAsync(Permissions.CAMERA)\n      let cameraPermissionResult = await Camera.requestCameraPermissionsAsync()\n  // console.log(cameraPermissionResult, \">>>>>>>>>>>>>>>>\")\n    if (cameraPermissionResult.granted === false) {\n        alert ('Permission to use camera is required!')\n        return\n      }\n  \n      setHaveCameraPermission(\"Yes\")  \n      \n      // console.log(\">>>>>>>>>Hello!\")\n\n    }\n    // console.log(\">>>>>>>>>Hello....2  !\")\n\n    \n    let openImagePickerAsync = async () => {\n      let permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync()\n      // console.log(permissionResult, \" IMAGE PICK RESULT\")\n      \n      if (permissionResult.granted === false) {\n        alert('Permission to access camera roll is required!')\n        return\n      }\n      \n      let pickerResult = await ImagePicker.launchImageLibraryAsync()\n      if (pickerResult.cancelled === true) {\n        return\n      }\n      setCameraRollImage({ localUri: pickerResult.uri })\n      \n    }\n    \n    if (cameraRollImage.localUri !== \"\"){\n      return (\n        <View style={styles.container}>\n          <Image\n            source={{ uri: cameraRollImage.localUri }}\n            style={styles.thumbnail}\n            />\n        <TouchableOpacity\n          onPress={() => alert('Saved!')}\n          style={styles.button}\n          >\n\n        <Text style={styles.buttonText}>Save chosen image</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  // Break\n\n  async function makeApiCall () {\n    let plant:any;\n    try {\n      const response = await axios.post(\n        \"https://api.plant.id/v2/identify\",\n        {\n          api_key: \"iV7mwOKohIvJItMVxVm9EaZOuivehgHxZPYoEbYUEyWkKYtOAF\",\n          images: [cameraPhoto.base64],\n          plant_language: \"en\",\n          plant_details: [\"common_names\"],\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      )\n\n      const suggestedPlants = response.data.suggestions.map((plant) => {\n        return {\n          botanicalName: plant.plant_name,\n          commonName: plant.plant_details.common_names,\n          probability: plant.probability,\n        }\n      })\n      console.log(suggestedPlants);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  \n  if (cameraPhoto.height !== \"\"){\n    \n    // console.log(cameraPhoto)\n    \n    return (\n      <View style={styles.container}>\n        <Image\n        \n          source={{ uri: cameraPhoto.uri }}\n          style={styles.thumbnail}\n          />\n      <TouchableOpacity\n        onPress={() => alert('Saved!')}\n        style={styles.button}\n        >\n\n      <Text style={styles.buttonText}>Save chosen image</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        onPress={ ()=> {makeApiCall()}\n\n\n        }\n          \n        \n        style={styles.button}\n        >\n\n      <Text style={styles.buttonText}>Identify this plant</Text>\n      </TouchableOpacity>\n    </View>\n  ); }\n\n\n  const takePhoto = async () => {\n if (cameraRef) {    // Was - if(cameraRef)\n   console.log(\"In take photo\")\n  //  console.log(cameraRef)\n   try{\n     let photo = await cameraRef.current.takePictureAsync({\n       allowsEditing: true,\n       aspect: [4, 3],\n       quality: 1,\n       base64: true,\n\n     })\n    //  console.log(photo)\n     setCameraPhoto(photo)\n    //  console.log(cameraPhoto)\n     return photo\n   } catch (error) {\n     console.log(error)\n   }\n }\n\n  }\n  if (haveCameraPermission === \"Yes\") {\n    // console.log(\"Are we in the render of camera?\")\n     return (\n         <View style={styles.cameraContainer}>\n          \n           <Camera style={styles.camera} type={type} ref={cameraRef}>\n             <View style={styles.buttonContainer}>\n               <TouchableOpacity\n                 style={styles.cameraButton}\n                 onPress={() => {\n                     setType(\n                         type === Camera.Constants.Type.back\n                           ? Camera.Constants.Type.front\n                           : Camera.Constants.Type.back\n                       );\n                     }}>\n                     <Text style={styles.text}> Flip </Text>\n                   </TouchableOpacity>\n                   <TouchableOpacity \n                   style={styles.cameraButton}\n                   onPress={async () => {\n                     const r = await takePhoto()\n                    \n                  }}\n                   >\n\n                   <Text style={styles.text}> Photo </Text>\n                   </TouchableOpacity>\n                   <TouchableOpacity \n                   style={styles.cameraButton}\n                  //  onPress={}\n                   >\n\n                   <Text style={styles.text}> Cancel </Text>\n                   </TouchableOpacity>\n                 </View>\n               </Camera> \n               \n             </View>\n           );\n\n  }\n  \n  return (\n    <View style={styles.container}>\n\n      <Text >Add a plant to your collection!</Text>\n      {/* <Image source={} style={} /> */}\n      <Text>Push button to select from camera roll </Text>\n\n      <TouchableOpacity onPress={openImagePickerAsync} style={styles.button}>\n        <Text style={styles.buttonText}>Pick a photo</Text>\n      </TouchableOpacity>\n      <Text> Push button to open camera</Text>\n      <TouchableOpacity onPress={openCameraAsync} style={styles.button}>\n        <Text style={styles.buttonText}>Take a photo</Text>\n      </TouchableOpacity>\n    </View>\n  )\n\n}\n\n\nexport default CameraScreen\n\n// >>>>> Break >>>>>\n\n"]},"metadata":{},"sourceType":"module"}