{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport { useState } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport MainTabNavigator from \"./MainTabNavigator\";\nimport SingleLookedUpPlantScreen from \"./SingleLookedUpPlantScreen\";\nimport SingleCategoryPlantScreen from \"./SingleCategoryPlantScreen\";\nimport { getFocusedRouteNameFromRoute } from '@react-navigation/native';\nvar Stack = createStackNavigator();\n\nfunction getHeaderTitle(route) {\n  var _getFocusedRouteNameF;\n\n  return (_getFocusedRouteNameF = getFocusedRouteNameFromRoute(route)) != null ? _getFocusedRouteNameF : 'Home';\n}\n\nfunction MainStackNavigator() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      plantCategory = _useState2[0],\n      setPlantCategory = _useState2[1];\n\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      gestureEnabled: true,\n      gestureDirection: \"horizontal\",\n      headerStyle: {\n        backgroundColor: '#3564c8'\n      },\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      },\n      headerTintColor: '#ffffff'\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: MainTabNavigator,\n    options: function options(_ref) {\n      var route = _ref.route;\n      return {\n        title: getHeaderTitle(route)\n      };\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Single Looked Up Plant\",\n    component: SingleLookedUpPlantScreen\n  }), React.createElement(Stack.Screen, {\n    name: \"Single Plant Category\",\n    component: SingleCategoryPlantScreen\n  }));\n}\n\nexport default MainStackNavigator;","map":{"version":3,"sources":["/Users/philbulleyment/Documents/northcoders/projects/final-project/components/MainStackNavigator.tsx"],"names":["React","useState","createStackNavigator","MainTabNavigator","SingleLookedUpPlantScreen","SingleCategoryPlantScreen","getFocusedRouteNameFromRoute","Stack","getHeaderTitle","route","MainStackNavigator","plantCategory","setPlantCategory","gestureEnabled","gestureDirection","headerStyle","backgroundColor","headerTitleStyle","fontWeight","headerTintColor","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAIA,OAAOC,gBAAP;AAIA,OAAOC,yBAAP;AACA,OAAOC,yBAAP;AACA,SACMC,4BADN,QAES,0BAFT;AAIA,IAAMC,KAAK,GAAGL,oBAAoB,EAAlC;;AAEA,SAASM,cAAT,CAAwBC,KAAxB,EAAsC;AAAA;;AAElC,kCAAOH,4BAA4B,CAACG,KAAD,CAAnC,oCAA8C,MAA9C;AACD;;AAEH,SAASC,kBAAT,GAA8B;AAG5B,kBAA0CT,QAAQ,CAAgB,EAAhB,CAAlD;AAAA;AAAA,MAAOU,aAAP;AAAA,MAAsBC,gBAAtB;;AAEA,SAEI,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,aAAa,EAAE;AAC9BC,MAAAA,cAAc,EAAE,IADc;AAE9BC,MAAAA,gBAAgB,EAAE,YAFY;AAG9BC,MAAAA,WAAW,EAAE;AACXC,QAAAA,eAAe,EAAE;AADN,OAHiB;AAM9BC,MAAAA,gBAAgB,EAAE;AAChBC,QAAAA,UAAU,EAAE;AADI,OANY;AAS9BC,MAAAA,eAAe,EAAE;AATa;AAAhC,KAaE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAEhB,gBAArC;AAAuD,IAAA,OAAO,EAAE;AAAA,UAAEM,KAAF,QAAEA,KAAF;AAAA,aAAc;AAC5EW,QAAAA,KAAK,EAAEZ,cAAc,CAACC,KAAD;AADuD,OAAd;AAAA;AAAhE,IAbF,EAiBE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,wBAAnB;AAA4C,IAAA,SAAS,EAAEL;AAAvD,IAjBF,EAkBE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,uBAAnB;AAA2C,IAAA,SAAS,EAAEC;AAAtD,IAlBF,CAFJ;AAwBD;;AAED,eAAeK,kBAAf","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport HomeScreen from './HomeScreen';\nimport CalendarScreen from './CalendarScreen';\nimport MainTabNavigator from './MainTabNavigator';\nimport SearchScreen from './SearchScreen';\nimport CameraScreen from './CameraScreen';\nimport LightMeterScreen from './LightMeterScreen';\nimport SingleLookedUpPlantScreen from './SingleLookedUpPlantScreen';\nimport SingleCategoryPlantScreen from './SingleCategoryPlantScreen';\nimport {\n      getFocusedRouteNameFromRoute,\n  } from '@react-navigation/native';\n\nconst Stack = createStackNavigator()\n\nfunction getHeaderTitle(route:object) {\n    // In case the focused route is not found, assume it's the first screen\n    return getFocusedRouteNameFromRoute(route) ?? 'Home';\n  }\n\nfunction MainStackNavigator() {\n  \n\n  const [plantCategory, setPlantCategory] = useState<string | null>(\"\")\n  \n  return (\n    \n      <Stack.Navigator screenOptions={{\n        gestureEnabled: true,\n        gestureDirection: \"horizontal\",\n        headerStyle: {\n          backgroundColor: '#3564c8'\n        },\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        },\n        headerTintColor: '#ffffff'\n      }}\n      \n      >\n        <Stack.Screen name='Home' component={MainTabNavigator} options={({route}) => ({\n          title: getHeaderTitle(route),\n        })}  />\n        \n        <Stack.Screen name=\"Single Looked Up Plant\" component={SingleLookedUpPlantScreen} />\n        <Stack.Screen name=\"Single Plant Category\" component={SingleCategoryPlantScreen} />\n      </Stack.Navigator>\n    \n  )\n}\n\nexport default MainStackNavigator"]},"metadata":{},"sourceType":"module"}