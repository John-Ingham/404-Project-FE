{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useState } from \"react\";\nexport var PlantCategoryContext = createContext({\n  plantCategory: \"Flowering House Plants\",\n  setPlantCategory: function setPlantCategory() {}\n});\nexport var PlantCategoryProvider = function PlantCategoryProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      plantCategory = _useState2[0],\n      setPlantCategory = _useState2[1];\n\n  return React.createElement(PlantCategoryContext.Provider, {\n    value: {\n      plantCategory: plantCategory,\n      setPlantCategory: setPlantCategory\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/philbulleyment/Documents/northcoders/projects/final-project/components/utils/Context.tsx"],"names":["React","createContext","useState","PlantCategoryContext","plantCategory","setPlantCategory","PlantCategoryProvider","children"],"mappings":";AAAA,OAAOA,KAAP,IAAoBC,aAApB,EAA+CC,QAA/C,QAA+D,OAA/D;AAOA,OAAO,IAAMC,oBAAoB,GAAGF,aAAa,CAAwB;AACvEG,EAAAA,aAAa,EAAE,wBADwD;AAEvEC,EAAAA,gBAAgB,EAAE,4BAAM,CAAE;AAF6C,CAAxB,CAA1C;AASP,OAAO,IAAMC,qBAAiC,GAAG,SAApCA,qBAAoC,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACjE,kBAA0CL,QAAQ,CAAC,EAAD,CAAlD;AAAA;AAAA,MAAOE,aAAP;AAAA,MAAsBC,gBAAtB;;AAEA,SACE,oBAAC,oBAAD,CAAsB,QAAtB;AAA+B,IAAA,KAAK,EAAE;AAAED,MAAAA,aAAa,EAAbA,aAAF;AAAiBC,MAAAA,gBAAgB,EAAhBA;AAAjB;AAAtC,KACGE,QADH,CADF;AAKD,CARM","sourcesContent":["import React, { FC, createContext, useContext, useState } from \"react\";\n\ninterface IPlantCategoryContext {\n  plantCategory: string;\n  setPlantCategory: (newPlantCategory: string) => void;\n}\n\nexport const PlantCategoryContext = createContext<IPlantCategoryContext>({\n  plantCategory: \"Flowering House Plants\",\n  setPlantCategory: () => {},\n});\n\ninterface IProps {\n  children: object | null;\n}\n\nexport const PlantCategoryProvider: FC<IProps> = ({ children }) => {\n  const [plantCategory, setPlantCategory] = useState(\"\");\n\n  return (\n    <PlantCategoryContext.Provider value={{ plantCategory, setPlantCategory }}>\n      {children}\n    </PlantCategoryContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}