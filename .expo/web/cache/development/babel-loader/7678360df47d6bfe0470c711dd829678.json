{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useState, useEffect } from \"react\";\nimport { getSinglePlant } from \"./utils/Api\";\n\nvar SingleLookedUpPlantScreen = function SingleLookedUpPlantScreen(props) {\n  var route = props.route;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      singlePlant = _useState2[0],\n      setSinglePlant = _useState2[1];\n\n  var commonName = props.route.params.commonName;\n  useEffect(function () {\n    getSinglePlant(commonName).then(function (response) {\n      console.log(response, '<---response');\n      setSinglePlant(response);\n    }).catch(function (err) {\n      console.log(err, \"<-----err\");\n    });\n  }, []);\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Image, {\n    source: singlePlant.image_url\n  }), React.createElement(Text, null, \" \", singlePlant.commonName, \" \"), React.createElement(Text, null, \" \", singlePlant.botanicalName, \" \"), React.createElement(Text, null, \" \", singlePlant.description, \" \"));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    padding: Spacing.base\n  },\n  header: _objectSpread({\n    flex: 1\n  }, Typography.mainHeader),\n  section: _objectSpread({\n    flex: 3\n  }, Typography.section)\n});\nexport default SingleLookedUpPlantScreen;","map":{"version":3,"sources":["/Users/philbulleyment/Documents/northcoders/projects/final-project/components/SingleLookedUpPlantScreen.tsx"],"names":["React","useState","useEffect","getSinglePlant","SingleLookedUpPlantScreen","props","route","singlePlant","setSinglePlant","commonName","params","then","response","console","log","catch","err","styles","container","image_url","botanicalName","description","StyleSheet","create","flex","alignItems","padding","Spacing","base","header","Typography","mainHeader","section"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,cAAT;;AAGA,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,KAAD,EAAe;AAC/C,MAAOC,KAAP,GAAgBD,KAAhB,CAAOC,KAAP;;AACA,kBAAsCL,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOM,WAAP;AAAA,MAAoBC,cAApB;;AACA,MAAOC,UAAP,GAAqBJ,KAAK,CAACC,KAAN,CAAYI,MAAjC,CAAOD,UAAP;AAGAP,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,cAAc,CAACM,UAAD,CAAd,CACGE,IADH,CACQ,UAACC,QAAD,EAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAAsB,cAAtB;AACAJ,MAAAA,cAAc,CAACI,QAAD,CAAd;AAED,KALH,EAMGG,KANH,CAMS,UAACC,GAAD,EAAS;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ,EAAiB,WAAjB;AACD,KARH;AASD,GAVQ,EAUP,EAVO,CAAT;AAYE,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAGC,MAAM,CAACC;AAArB,KACA,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEX,WAAW,CAACY;AAA3B,IADA,EAGA,oBAAC,IAAD,aAAQZ,WAAW,CAACE,UAApB,MAHA,EAIA,oBAAC,IAAD,aAAQF,WAAW,CAACa,aAApB,MAJA,EAKA,oBAAC,IAAD,aAAQb,WAAW,CAACc,WAApB,MALA,CADJ;AASH,CA3BD;;AA6BA,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAC,CADI;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,OAAO,EAAEC,OAAO,CAACC;AAHR,GADoB;AAM/BC,EAAAA,MAAM;AACJL,IAAAA,IAAI,EAAE;AADF,KAEDM,UAAU,CAACC,UAFV,CANyB;AAU/BC,EAAAA,OAAO;AACLR,IAAAA,IAAI,EAAE;AADD,KAEFM,UAAU,CAACE,OAFT;AAVwB,CAAlB,CAAf;AAgBA,eAAe5B,yBAAf","sourcesContent":["import React from 'react';\nimport { View, Text, Image, StyleSheet } from \"react-native\";\nimport { useState, useEffect } from \"react\"\nimport { getSinglePlant } from './utils/Api';\n\n\nconst SingleLookedUpPlantScreen = (props:any) => {\n  const {route} = props\n  const [singlePlant, setSinglePlant] = useState({});\n  const {commonName} = props.route.params\n  \n\n  useEffect(() => {\n    getSinglePlant(commonName)\n      .then((response) => {\n        console.log(response, '<---response')\n        setSinglePlant(response);\n        \n      })\n      .catch((err) => {\n        console.log(err, \"<-----err\");\n      });\n  },[]);\n\n    return (\n        <View style={ styles.container}>\n        <Image source={singlePlant.image_url}\n                />\n        <Text> {singlePlant.commonName} </Text>\n        <Text> {singlePlant.botanicalName} </Text>\n        <Text> {singlePlant.description} </Text>\n      </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex:1,\n    alignItems: 'center',\n    padding: Spacing.base,\n  },\n  header: {\n    flex: 1,\n    ...Typography.mainHeader,\n  },\n  section: {\n    flex: 3,\n    ...Typography.section,\n  }\n})\n\nexport default SingleLookedUpPlantScreen"]},"metadata":{},"sourceType":"module"}