{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { useState, useEffect } from \"react\";\nimport { getPlants } from \"./utils/Api\";\nimport { FlatList } from \"react-native-gesture-handler\";\n\nvar SingleCategoryPlantScreen = function SingleCategoryPlantScreen(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      plants = _useState2[0],\n      setPlants = _useState2[1];\n\n  var plantCategoryId = props.route.params.plantCategoryId;\n  useEffect(function () {\n    getPlants(plantCategoryId).then(function (response) {\n      setPlants(response);\n    }).catch(function (err) {\n      console.log(err, \"<-----err\");\n    });\n  }, []);\n\n  var renderPlant = function renderPlant(_ref) {\n    var plant = _ref.plant;\n    return React.createElement(Plant, {\n      title: plant.botanicalName\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container\n  }, React.createElement(FlatList, {\n    data: plants,\n    renderPlant: renderPlant,\n    keyExtractor: function keyExtractor(plant) {\n      return plant.botanicalName;\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  subtitleView: {\n    flexDirection: \"column\",\n    paddingLeft: 10,\n    paddingTop: 5\n  },\n  ratingImage: {\n    height: 19.21,\n    width: 100\n  },\n  ratingText: {\n    paddingLeft: 10,\n    color: \"grey\"\n  },\n  scrollView: {\n    backgroundColor: 'pink',\n    marginHorizontal: 20\n  },\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0\n  }\n});\nexport default SingleCategoryPlantScreen;","map":{"version":3,"sources":["/Users/philbulleyment/Documents/northcoders/projects/final-project/components/SingleCategoryPlantScreen.tsx"],"names":["React","useState","useEffect","getPlants","FlatList","SingleCategoryPlantScreen","props","plants","setPlants","plantCategoryId","route","params","then","response","catch","err","console","log","renderPlant","plant","botanicalName","styles","container","StyleSheet","create","subtitleView","flexDirection","paddingLeft","paddingTop","ratingImage","height","width","ratingText","color","scrollView","backgroundColor","marginHorizontal","flex","marginTop","StatusBar","currentHeight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT;AAEA,SAASC,QAAT,QAAyB,8BAAzB;;AAEA,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,KAAD,EAAgB;AAChD,kBAA4BL,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOM,MAAP;AAAA,MAAeC,SAAf;;AACA,MAAOC,eAAP,GAA0BH,KAAK,CAACI,KAAN,CAAYC,MAAtC,CAAOF,eAAP;AAEAP,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,SAAS,CAACM,eAAD,CAAT,CACGG,IADH,CACQ,UAACC,QAAD,EAAc;AAClBL,MAAAA,SAAS,CAACK,QAAD,CAAT;AACD,KAHH,EAIGC,KAJH,CAIS,UAACC,GAAD,EAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAiB,WAAjB;AACD,KANH;AAOD,GARQ,EAQP,EARO,CAAT;;AAUA,MAAMG,WAAW,GAAG,SAAdA,WAAc;AAAA,QAAGC,KAAH,QAAGA,KAAH;AAAA,WAClB,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEA,KAAK,CAACC;AAApB,MADkB;AAAA,GAApB;;AAIA,SAEE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEC,MAAM,CAACC;AAA5B,KACA,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEf,MADR;AAEE,IAAA,WAAW,EAAEW,WAFf;AAGE,IAAA,YAAY,EAAE,sBAAAC,KAAK;AAAA,aAAIA,KAAK,CAACC,aAAV;AAAA;AAHrB,IADA,CAFF;AA8BD,CAhDD;;AAkDA,IAAMC,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,YAAY,EAAE;AAEZC,IAAAA,aAAa,EAAE,QAFH;AAEaC,IAAAA,WAAW,EAAE,EAF1B;AAE8BC,IAAAA,UAAU,EAAE;AAF1C,GADiB;AAI/BC,EAAAA,WAAW,EAAE;AAAEC,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GAJkB;AAK/BC,EAAAA,UAAU,EAAE;AAAEL,IAAAA,WAAW,EAAE,EAAf;AAAmBM,IAAAA,KAAK,EAAE;AAA1B,GALmB;AAM/BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,eAAe,EAAE,MADP;AAEVC,IAAAA,gBAAgB,EAAE;AAFR,GANmB;AAU/Bd,EAAAA,SAAS,EAAE;AACTe,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,SAAS,EAAEC,SAAS,CAACC,aAAV,IAA2B;AAF7B;AAVoB,CAAlB,CAAf;AAgBA,eAAenC,yBAAf","sourcesContent":["import React from \"react\";\nimport { View, Text, ScrollView, StyleSheet, StatusBar, SafeAreaView } from \"react-native\";\nimport { useState, useEffect } from \"react\";\nimport { getPlants } from \"./utils/Api\";\nimport { ListItem, Avatar } from \"react-native-elements\";\nimport { FlatList } from \"react-native-gesture-handler\";\n\nconst SingleCategoryPlantScreen = (props: any) => {\n  const [plants, setPlants] = useState([]);\n  const {plantCategoryId} = props.route.params\n\n  useEffect(() => {\n    getPlants(plantCategoryId)\n      .then((response) => {\n        setPlants(response);\n      })\n      .catch((err) => {\n        console.log(err, \"<-----err\");\n      });\n  },[]);\n\n  const renderPlant = ({ plant }) => (\n    <Plant title={plant.botanicalName} />\n  )\n  \n  return (\n    \n    <SafeAreaView style={styles.container}>\n    <FlatList\n      data={plants}\n      renderPlant={renderPlant}\n      keyExtractor={plant => plant.botanicalName}\n    />\n  </SafeAreaView>\n\n\n\n      // <View style={styles.subtitleView}>\n      // <ScrollView style={styles.scrollView}>\n      //   <FlatList\n      //   {plants.map((plant, i) => (\n      //     <ListItem key={i} bottomDivider>\n      //       <Avatar source={{ uri: plant.image_url }} />\n      //       <ListItem.Content>\n      //         <ListItem.Title>{plant.botanicalName}</ListItem.Title>\n      //         <ListItem.Subtitle>{plant.commonName}</ListItem.Subtitle>\n      //       </ListItem.Content>\n      //     </ListItem>\n      //   ))}\n      //   />\n      //   </ScrollView>\n      // </View>\n      \n    \n  );\n};\n\nconst styles = StyleSheet.create({\n  subtitleView: {\n    \n    flexDirection: \"column\", paddingLeft: 10, paddingTop: 5 },\n  ratingImage: { height: 19.21, width: 100 },\n  ratingText: { paddingLeft: 10, color: \"grey\" },\n  scrollView: {\n    backgroundColor: 'pink',\n    marginHorizontal: 20,\n  },\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0,\n  },\n});\n\nexport default SingleCategoryPlantScreen;\n"]},"metadata":{},"sourceType":"module"}