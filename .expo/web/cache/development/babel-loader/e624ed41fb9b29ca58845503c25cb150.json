{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport { useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nfunction SearchScreen(props) {\n  var navigation = props.navigation;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      searchQuery = _React$useState2[0],\n      setSearchQuery = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      plantCategory = _React$useState4[0],\n      setPlantCategory = _React$useState4[1];\n\n  var onChangeSearch = function onChangeSearch(query) {\n    return setSearchQuery(query);\n  };\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      indexSelected = _useState2[0],\n      setIndexSelected = _useState2[1];\n\n  var onSelect = function onSelect(indexSelected) {\n    setIndexSelected(indexSelected);\n  };\n\n  var handleOnPress = function handleOnPress() {\n    setPlantCategory;\n  };\n\n  var _Dimensions$get = Dimensions.get('window'),\n      width = _Dimensions$get.width;\n\n  var SPACING = 10;\n  var THUMB_SIZE = 80;\n  var IMAGES = {\n    image1: require(\"../assets/cat1.jpg\"),\n    image2: require(\"../assets/cat1.jpg\"),\n    image3: require(\"../assets/cat1.jpg\"),\n    image4: require(\"../assets/cat1.jpg\"),\n    image5: require(\"../assets/cat1.jpg\"),\n    image6: require(\"../assets/cat1.jpg\"),\n    image7: require(\"../assets/cat1.jpg\")\n  };\n\n  var _useState3 = useState([{\n    id: '1',\n    image: IMAGES.image1\n  }, {\n    id: '2',\n    image: IMAGES.image2\n  }, {\n    id: '3',\n    image: IMAGES.image3\n  }, {\n    id: '4',\n    image: IMAGES.image4\n  }, {\n    id: '5',\n    image: IMAGES.image5\n  }, {\n    id: '6',\n    image: IMAGES.image6\n  }, {\n    id: '7',\n    image: IMAGES.image7\n  }]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      images = _useState4[0],\n      setImages = _useState4[1];\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    backgroundColor: '#ebebeb'\n  },\n  text: {\n    color: '#101010',\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  buttonContainer: {\n    backgroundColor: '#222',\n    borderRadius: 5,\n    padding: 10,\n    margin: 20\n  },\n  buttonText: {\n    fontSize: 20,\n    color: '#fff'\n  },\n  searchbar: {\n    width: 300\n  },\n  categoryImage: {\n    width: 100,\n    height: 100\n  },\n  categoryPictureContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center'\n  }\n});\nexport default SearchScreen;","map":{"version":3,"sources":["/Users/philbulleyment/Documents/northcoders/projects/final-project/components/SearchScreen.tsx"],"names":["React","useState","SearchScreen","props","navigation","searchQuery","setSearchQuery","plantCategory","setPlantCategory","onChangeSearch","query","indexSelected","setIndexSelected","onSelect","handleOnPress","Dimensions","get","width","SPACING","THUMB_SIZE","IMAGES","image1","require","image2","image3","image4","image5","image6","image7","id","image","images","setImages","styles","StyleSheet","create","container","flex","justifyContent","alignItems","backgroundColor","text","color","fontSize","fontWeight","buttonContainer","borderRadius","padding","margin","buttonText","searchbar","categoryImage","height","categoryPictureContainer","flexDirection","flexWrap"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState, useRef } from 'react';\nimport { getPlants } from './utils/Api';\nimport { TouchableOpacity, View, Text, Image, FlatList, Dimensions, StyleSheet } from 'react-native';\nimport { Searchbar } from 'react-native-paper';\nimport Carousel, { Pagination } from 'react-native-snap-carousel';\n\n\n\nfunction SearchScreen(props:any) {\n  const { navigation } = props\n  const [searchQuery, setSearchQuery] = React.useState('');\n  const [plantCategory, setPlantCategory] = React.useState('')\n  const onChangeSearch = (query:string) => setSearchQuery(query);\n  const [indexSelected, setIndexSelected] = useState(0);\n\n  const onSelect = (indexSelected:number) => {\n    setIndexSelected(indexSelected);\n  };\n\n  const handleOnPress = () => {\n    setPlantCategory\n  }\n  \n  const { width } = Dimensions.get('window');\n  const SPACING = 10;\n  const THUMB_SIZE = 80;\n  \n  const IMAGES = {\n    image1: require('../assets/cat1.jpg'),\n    image2: require('../assets/cat1.jpg'),\n    image3: require('../assets/cat1.jpg'),\n    image4: require('../assets/cat1.jpg'),\n    image5: require('../assets/cat1.jpg'),\n    image6: require('../assets/cat1.jpg'),\n    image7: require('../assets/cat1.jpg')\n  };\n\n\n  const [images, setImages] = useState([\n    { id: '1', image: IMAGES.image1 },\n    { id: '2', image: IMAGES.image2 },\n    { id: '3', image: IMAGES.image3 },\n    { id: '4', image: IMAGES.image4 },\n    { id: '5', image: IMAGES.image5 },\n    { id: '6', image: IMAGES.image6 },\n    { id: '7', image: IMAGES.image7 }\n  ]);\n\n  \n   \n  }\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'flex-start',\n      backgroundColor: '#ebebeb'\n    },\n    text: {\n      color: '#101010',\n      fontSize: 24,\n      fontWeight: 'bold'\n    },\n    buttonContainer: {\n      backgroundColor: '#222',\n      borderRadius: 5,\n      padding: 10,\n      margin: 20\n    },\n    buttonText: {\n      fontSize: 20,\n      color: '#fff'\n    },\n    searchbar: {\n      width: 300,\n    },\n    categoryImage: {\n      width: 100,\n      height: 100,\n      \n    },\n    categoryPictureContainer: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      justifyContent: 'center'\n    }\n  })\n\n  export default SearchScreen"]},"metadata":{},"sourceType":"module"}