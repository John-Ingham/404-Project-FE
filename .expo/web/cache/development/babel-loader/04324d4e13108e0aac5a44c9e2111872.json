{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\n\nfunction LightMeterScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Text, null, \"Light Meter\"), React.createElement(Text, null, \"Lux meter, requires `sensors` functionality\"));\n}\n\nexport default LightMeterScreen;","map":{"version":3,"sources":["/Users/philbulleyment/Documents/northcoders/projects/final-project/components/LightMeterScreen.tsx"],"names":["React","LightMeterScreen","flex","justifyContent","alignItems"],"mappings":"AAAA,OAAOA,KAAP,MAA6C,OAA7C;;;;AAUA,SAASC,gBAAT,GAA4B;AAgBxB,SAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE,QAA3B;AAAqCC,MAAAA,UAAU,EAAE;AAAjD;AAAb,KACE,oBAAC,IAAD,sBADF,EAEE,oBAAC,IAAD,sDAFF,CAFF;AAQD;;AAED,eAAeH,gBAAf","sourcesContent":["import React, {EventEmitter, useEffect} from 'react';\n// import com.sensormanager.SensorManagerPackage\nimport { SensorManager } from 'react-native'\nimport{ Stylesheet, View, Text} from 'react-native'\n// import * as Brightness from \"expo-brightness\"\nimport { SYSTEM_BRIGHTNESS } from 'expo-permissions';\n\n\n// non-functional currently\n\nfunction LightMeterScreen() {\n\n  \n// <><><><><><> Break\n\n  // SensorManager.startLightSensor(100)\n  // DeviceEventEmitter.addlistener(\"LightSensor\", function(data) {\n\n  // console.log(data)\n  // })\n  // const sensor = new AmbientLightSensor()\n  // sensor.onreading = () => console.log(sensor.illuminance)\n  // sensor.onerror = event => console.log(event.error.name, event.error.message)\n  // sensor.start()\n\n  // <><><><><><> Break\n    return (\n      \n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n        <Text>Light Meter</Text>\n        <Text>Lux meter, requires `sensors` functionality</Text>\n\n      </View>\n    );\n  }\n\n  export default LightMeterScreen"]},"metadata":{},"sourceType":"module"}