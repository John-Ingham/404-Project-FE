{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { getSinglePlant, postUserPlantToDatabase } from \"./utils/Api\";\nimport { Image } from \"react-native-elements\";\nimport { Button } from \"react-native-elements\";\nimport { ActivityIndicator } from \"react-native-paper\";\nimport { UserContext } from \"./utils/User\";\n\nvar SingleLookedUpPlantScreen = function SingleLookedUpPlantScreen(props) {\n  var route = props.route,\n      navigation = props.navigation;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      singlePlant = _useState2[0],\n      setSinglePlant = _useState2[1];\n\n  var _useState3 = useState(false),\n      refreshTrigger = _useState3.refreshTrigger,\n      setRefreshTrigger = _useState3.setRefreshTrigger;\n\n  var _useState4 = useState(false),\n      _useState5 = _slicedToArray(_useState4, 2),\n      clicked = _useState5[0],\n      setClicked = _useState5[1];\n\n  var _useState6 = useState({\n    commonName: \"\",\n    nextWatering: \"\",\n    lastWatered: \"\"\n  }),\n      _useState7 = _slicedToArray(_useState6, 2),\n      plantToPost = _useState7[0],\n      setPlantToPost = _useState7[1];\n\n  var commonName = props.route.params.commonName;\n\n  var _useContext = useContext(UserContext),\n      userName = _useContext.userName;\n\n  var imageSource = singlePlant.image_url;\n  useEffect(function () {\n    getSinglePlant(commonName).then(function (response) {\n      setSinglePlant(response);\n    }).catch(function (err) {\n      console.log(err, \"<-----err\");\n    });\n  }, []);\n\n  var handleAddToInventory = function handleAddToInventory(singlePlant) {\n    setClicked(true);\n    setPlantToPost({\n      commonName: singlePlant.commonName,\n      nextWatering: \"\",\n      lastWatered: \"\"\n    });\n    navigation.navigate(\"Main\", {\n      screen: 'Home'\n    });\n  };\n\n  useEffect(function () {\n    if (clicked) postUserPlantToDatabase(userName, plantToPost);\n    setClicked(false);\n  }, [plantToPost]);\n  return React.createElement(ScrollView, null, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Image, {\n    source: {\n      uri: imageSource\n    },\n    style: {\n      width: 250,\n      height: 250,\n      borderRadius: 100\n    },\n    PlaceholderContent: React.createElement(ActivityIndicator, null)\n  }), React.createElement(Text, {\n    style: styles.title\n  }, \" \", singlePlant.commonName, \" \"), React.createElement(Text, {\n    style: styles.subtitle\n  }, \" \", singlePlant.botanicalName, \" \"), React.createElement(Text, {\n    style: styles.description\n  }, \" \", singlePlant.description, \" \"), React.createElement(Button, {\n    icon: {\n      name: \"arrow-right\",\n      size: 15,\n      color: \"white\"\n    },\n    title: \"Add To Inventory\",\n    onPress: function onPress() {\n      return handleAddToInventory(singlePlant);\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  header: {\n    flex: 1\n  },\n  section: {\n    flex: 3\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: \"700\"\n  },\n  subtitle: {\n    fontSize: 20,\n    fontWeight: \"500\",\n    fontStyle: \"italic\"\n  },\n  description: {\n    fontSize: 15,\n    fontWeight: \"300\",\n    marginHorizontal: 20,\n    lineHeight: 20\n  }\n});\nexport default SingleLookedUpPlantScreen;","map":{"version":3,"sources":["/Users/philbulleyment/Documents/northcoders/projects/final-project/components/SingleLookedUpPlantScreen.tsx"],"names":["React","useState","useEffect","useContext","getSinglePlant","postUserPlantToDatabase","Image","Button","ActivityIndicator","UserContext","SingleLookedUpPlantScreen","props","route","navigation","singlePlant","setSinglePlant","refreshTrigger","setRefreshTrigger","clicked","setClicked","commonName","nextWatering","lastWatered","plantToPost","setPlantToPost","params","userName","imageSource","image_url","then","response","catch","err","console","log","handleAddToInventory","navigate","screen","styles","container","uri","width","height","borderRadius","title","subtitle","botanicalName","description","name","size","color","StyleSheet","create","flex","alignItems","header","section","fontSize","fontWeight","fontStyle","marginHorizontal","lineHeight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View, Text, StyleSheet, ScrollView } from \"react-native\";\nimport { useState, useEffect, useContext, useRef } from \"react\";\nimport { getSinglePlant, postUserPlantToDatabase } from \"./utils/Api\";\nimport { getPlants } from \"./utils/Api\";\nimport { Image } from \"react-native-elements\";\nimport { Button } from \"react-native-elements\";\nimport { ActivityIndicator, Colors } from \"react-native-paper\";\nimport { UserContext, UserProvider } from \"./utils/User\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport { objectLessAttributes } from \"@aws-amplify/core\";\n\nconst SingleLookedUpPlantScreen = (props: any) => {\n  const { route, navigation } = props;\n  const [singlePlant, setSinglePlant] = useState({});\n  const {refreshTrigger, setRefreshTrigger} = useState(false)\n  // const mounted = useRef(false);\n  const [clicked, setClicked] = useState(false)\n  const [plantToPost, setPlantToPost] = useState({\n    commonName: \"\",\n    nextWatering: \"\",\n    lastWatered: \"\",\n  });\n\n  const { commonName } = props.route.params;\n  const { userName } = useContext(UserContext);\n  const imageSource = singlePlant.image_url;\n\n  useEffect(() => {\n    getSinglePlant(commonName)\n      .then((response) => {\n        setSinglePlant(response);\n      })\n      .catch((err) => {\n        console.log(err, \"<-----err\");\n      });\n  }, []);\n\n  const handleAddToInventory = (singlePlant: object) => {\n    setClicked(true)\n    setPlantToPost({\n      commonName: singlePlant.commonName,\n      nextWatering: \"\",\n      lastWatered: \"\",\n    });\n    navigation.navigate(\"Main\", {screen: 'Home'});\n    \n  };\n\n  useEffect(() => {\n   if( clicked ) postUserPlantToDatabase(userName, plantToPost)\n  setClicked(false)}, [plantToPost]);\n\n  return (\n    <ScrollView>\n      <View style={styles.container}>\n        <Image\n          source={{ uri: imageSource }}\n          style={{ width: 250, height: 250, borderRadius: 100 }}\n          PlaceholderContent={<ActivityIndicator />}\n        />\n        <Text style={styles.title}> {singlePlant.commonName} </Text>\n        <Text style={styles.subtitle}> {singlePlant.botanicalName} </Text>\n        <Text style={styles.description}> {singlePlant.description} </Text>\n        \n        <Button\n        \n          icon={{ name: \"arrow-right\", size: 15, color: \"white\" }}\n          title=\"Add To Inventory\"\n          onPress={() => handleAddToInventory(singlePlant)}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n  },\n  header: {\n    flex: 1,\n  },\n  section: {\n    flex: 3,\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: \"700\",\n  },\n  subtitle: {\n    fontSize: 20,\n    fontWeight: \"500\",\n    fontStyle: \"italic\",\n  },\n  description: {\n    fontSize: 15,\n    fontWeight: \"300\",\n    marginHorizontal: 20,\n    lineHeight: 20,\n  },\n});\n\nexport default SingleLookedUpPlantScreen;\n"]},"metadata":{},"sourceType":"module"}